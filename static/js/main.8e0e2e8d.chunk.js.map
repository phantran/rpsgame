{"version":3,"sources":["elements/Button.js","elements/Text.js","elements/FlexContainer.js","constants.js","components/Options.js","actions/mode.js","actions/types.js","elements/Line.js","actions/result.js","components/PlayerVsCom.js","components/ComVsCom.js","components/Result.js","actions/new.js","elements/MainContainer.js","components/MainScreen.js","elements/theme.js","App.js","serviceWorker.js","reducers/mode.js","reducers/result.js","reducers/index.js","store.js","index.js"],"names":["Button","styled","button","props","theme","font","bg","gradient","H1","h1","color","FlexContainer","div","direction","align","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","connect","state","playMode","mode","setPlayMode","dispatch","a","type","payload","onClick","e","Line","hr","hg","pd","mg","setResult","p1Move","p2Move","result","PlayerVsCom","handleClick","elem1","document","getElementById","elem2","classList","remove","offsetWidth","add","cMove","getRandomArbitrary","pMove","parseInt","target","id","setState","computerMove","playerMove","bind","min","max","Math","round","random","renderedComMove","renderedPlayerMove","this","className","style","height","transform","flexDirection","padding","Component","ComVsCom","c1Move","c2Move","computer1Move","computer2Move","renderedCom1Move","renderedCom2Move","disabled","pointerEvents","setNewGame","displayed_result","elem","resetAnimation","MainContainer","playarea","primary","secondary","alert","orange","purple","pink","gray","App","Boolean","window","location","hostname","match","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e0e2e8d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Button = styled.button`\n  font-family: ${props => props.theme.font};\n  font-size: 15px;\n  background: ${props => props.theme[props.bg]};\n  line-height: 48px;\n  padding-left: 40px;\n  padding-right: 40px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  border: 1.4px solid #9b35f2;\n  border-radius: 30px;\n  position: relative;\n  outline: none;\n  -webkit-transition: all 0.3s ease 0s;\n  -moz-transition: all 0.3s ease 0s;\n  -o-transition: all 0.3s ease 0s;\n  transition: all 0.3s ease 0s;\n  cursor: pointer;\n  text-transform: uppercase;\n  position: relative;\n  &:hover {\n    box-shadow: 0px 20px 20px 0px rgba(157, 157, 157, 0.5);\n    background: ${props => props.theme.gradient};\n  }\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n  font-family: ${props => props.theme.font};\n  font-size: 30px;\n  color: ${props => props.theme[props.color]};\n`;\n\nconst H2 = styled.h1`\n  font-family: ${props => props.theme.font};\n  font-size: 20px;\n  color: ${props => props.theme[props.color]};\n`;\n\nconst H3 = styled.h1`\n  font-family: ${props => props.theme.font};\n  font-size: 15px;\n  color: ${props => props.theme[props.color]};\n`;\n\nconst H4 = styled.h1`\n  font-family: ${props => props.theme.font};\n  font-size: 10px;\n  color: ${props => props.theme[props.color]};\n`;\n\nconst H5 = styled.h1`\n  font-family: ${props => props.theme.font};\n  font-size: 7px;\n  color: ${props => props.theme[props.color]};\n`;\n\nexport { H1, H2, H3, H4, H5 };\n","import styled from 'styled-components';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: ${props => props.direction};\n  text-align: ${props => props.align};\n  justify-content: center;\n`;\n\nexport default FlexContainer;\n","export const PLAYER_VS_COMPUTER = 0;\nexport const COMPUTER_VS_COMPUTER = 1;\nexport const P1WIN = 1;\nexport const P2WIN = 2;\nexport const DRAW = 3;\nexport const ROCK = 1;\nexport const PAPER = 2;\nexport const SCISSORS = 3;\n\nconst size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n};\n\nexport const device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../elements/Button';\nimport { H1 } from '../elements/Text';\nimport FlexContainer from '../elements/FlexContainer';\nimport { connect } from 'react-redux';\nimport { setPlayMode } from '../actions/mode';\nimport { PLAYER_VS_COMPUTER, COMPUTER_VS_COMPUTER } from '../constants';\n\nconst Options = ({ setPlayMode, playMode }) => {\n  return (\n    <FlexContainer direction=\"column\" align=\"center\">\n      <div>\n        <H1 color=\"primary\">Game Mode</H1>\n      </div>\n\n      <div>\n        <Button\n          bg={playMode === PLAYER_VS_COMPUTER ? 'gradient' : 'transparent'}\n          onClick={e => {\n            setPlayMode(PLAYER_VS_COMPUTER);\n          }}\n        >\n          Player vs Computer\n        </Button>\n      </div>\n      <div>\n        <Button\n          bg={playMode === COMPUTER_VS_COMPUTER ? 'gradient' : 'transparent'}\n          onClick={e => {\n            setPlayMode(COMPUTER_VS_COMPUTER);\n          }}\n        >\n          Computer vs Computer\n        </Button>\n      </div>\n    </FlexContainer>\n  );\n};\n\nOptions.propTypes = {\n  setPlayMode: PropTypes.func.isRequired,\n  playMode: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  playMode: state.mode.playMode\n});\n\nexport default connect(\n  mapStateToProps,\n  { setPlayMode }\n)(Options);\n","import { SET_PLAY_MODE, SET_RESULT } from './types';\n\nexport const setPlayMode = mode => async dispatch => {\n  // Change mode\n  dispatch({\n    type: SET_PLAY_MODE,\n    payload: mode\n  });\n  // Clear previous result\n  dispatch({\n    type: SET_RESULT,\n    payload: null\n  });\n};\n","export const SET_PLAY_MODE = 'SET_PLAY_MODE';\nexport const PLAY_AGAIN = 'PLAY_AGAIN';\nexport const SET_RESULT = 'SET_RESULT';\n","import styled from 'styled-components';\n\nconst Line = styled.hr`\n  color: ${props => props.theme[props.bg]};\n  background: ${props => props.theme[props.bg]};\n  border-radius: 10px;\n  border: none;\n  height: ${props => props.hg};\n  padding: ${props => props.pd};\n  margin: ${props => props.mg};\n`;\n\nexport default Line;\n","import { SET_RESULT } from './types';\nimport { ROCK, PAPER, SCISSORS, P1WIN, P2WIN, DRAW } from '../constants';\n\n// The main logic of the game\nexport const setResult = (p1Move, p2Move) => async dispatch => {\n  let result;\n  if (p1Move === ROCK) {\n    if (p2Move === PAPER) {\n      result = P2WIN;\n    } else if (p2Move === SCISSORS) {\n      result = P1WIN;\n    } else if (p2Move === ROCK) {\n      result = DRAW;\n    }\n  } else if (p1Move === PAPER) {\n    if (p2Move === PAPER) {\n      result = DRAW;\n    } else if (p2Move === SCISSORS) {\n      result = P2WIN;\n    } else if (p2Move === ROCK) {\n      result = P1WIN;\n    }\n  } else if (p1Move === SCISSORS) {\n    if (p2Move === PAPER) {\n      result = P1WIN;\n    } else if (p2Move === SCISSORS) {\n      result = DRAW;\n    } else if (p2Move === ROCK) {\n      result = P2WIN;\n    }\n  } else {\n  }\n\n  dispatch({\n    type: SET_RESULT,\n    payload: result\n  });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { H1 } from '../elements/Text';\nimport Line from '../elements/Line';\nimport FlexContainer from '../elements/FlexContainer';\nimport { setResult } from '../actions/result';\nimport { ROCK, PAPER, SCISSORS } from '../constants';\nimport { connect } from 'react-redux';\n\nclass PlayerVsCom extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick.bind(this);\n    this.state = { computerMove: 0, playerMove: 0 };\n  }\n\n  handleClick = e => {\n    let elem1 = document.getElementById('playerMove');\n    let elem2 = document.getElementById('computerMove');\n    // Handle animation player move\n    if (elem1 !== null) {\n      elem1.classList.remove('bounce-in-bottom');\n      // This line is used to reset animation\n      void elem1.offsetWidth;\n      elem1.classList.add('bounce-in-bottom');\n    }\n    // Handle animation computer move\n    if (elem2 !== null) {\n      elem2.classList.remove('bounce-in-bottom');\n      // This line is used to reset animation\n      void elem2.offsetWidth;\n      elem2.classList.add('bounce-in-bottom');\n    }\n\n    let cMove = this.getRandomArbitrary(1, 3);\n    let pMove = parseInt(e.target.id);\n    this.setState({ computerMove: cMove, playerMove: pMove });\n    // dispatch result to store\n    this.props.setResult(pMove, cMove);\n  };\n\n  getRandomArbitrary(min, max) {\n    return Math.round(Math.random() * (max - min) + min);\n  }\n\n  render() {\n    let renderedComMove, renderedPlayerMove;\n    switch (this.state.computerMove) {\n      case ROCK:\n        renderedComMove = (\n          <i\n            id=\"computerMove\"\n            className=\"fas fa-hand-rock  fa-6x bounce-in-bottom\"\n            style={{ color: '#F90787' }}\n          ></i>\n        );\n        break;\n      case PAPER:\n        renderedComMove = (\n          <i\n            id=\"computerMove\"\n            className=\"fas fa-hand-paper  fa-6x bounce-in-bottom\"\n            style={{ color: '#F90787' }}\n          ></i>\n        );\n        break;\n      case SCISSORS:\n        renderedComMove = (\n          <i\n            id=\"computerMove\"\n            className=\"fas fa-hand-peace  fa-6x bounce-in-bottom\"\n            style={{ color: '#F90787' }}\n          ></i>\n        );\n        break;\n      default:\n        break;\n    }\n\n    switch (this.state.playerMove) {\n      case ROCK:\n        renderedPlayerMove = (\n          <i\n            id=\"playerMove\"\n            className=\"far fa-hand-rock  fa-6x bounce-in-bottom\"\n            style={{ color: '#8B00F4' }}\n          ></i>\n        );\n        break;\n      case PAPER:\n        renderedPlayerMove = (\n          <i\n            id=\"playerMove\"\n            className=\"far fa-hand-paper  fa-6x bounce-in-bottom\"\n            style={{ color: '#8B00F4' }}\n          ></i>\n        );\n        break;\n      case SCISSORS:\n        renderedPlayerMove = (\n          <i\n            id=\"playerMove\"\n            className=\"far fa-hand-peace  fa-6x bounce-in-bottom\"\n            style={{ color: '#8B00F4' }}\n          ></i>\n        );\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <FlexContainer direction=\"column\" align=\"center\">\n        <H1 color=\"primary\">Computer Move</H1>\n        <div\n          style={{\n            height: '200px',\n            transform: 'rotate(180deg)'\n          }}\n        >\n          {this.props.result !== null ? renderedComMove : <></>}\n        </div>\n\n        <div>\n          <Line bg=\"gradient\" hg=\"3\" pd=\"10px\" mg=\"50px\" />\n        </div>\n\n        <div\n          style={{\n            height: '200px'\n          }}\n        >\n          {this.props.result !== null ? renderedPlayerMove : <></>}\n        </div>\n\n        <div style={{ flexDirection: 'row' }}>\n          <i\n            className=\"far fa-hand-rock fa-6x player-option\"\n            onClick={!this.props.result ? this.handleClick : null}\n            id=\"1\"\n            style={\n              this.props.result\n                ? { padding: '20px', color: 'gray' }\n                : { padding: '20px' }\n            }\n          ></i>\n\n          <i\n            className=\"far fa-hand-paper fa-6x player-option\"\n            onClick={!this.props.result ? this.handleClick : null}\n            id=\"2\"\n            style={\n              this.props.result\n                ? { padding: '20px', color: 'gray' }\n                : { padding: '20px' }\n            }\n          ></i>\n\n          <i\n            className=\"far fa-hand-peace fa-6x player-option\"\n            onClick={!this.props.result ? this.handleClick : null}\n            id=\"3\"\n            style={\n              this.props.result\n                ? { padding: '20px', color: 'gray' }\n                : { padding: '20px' }\n            }\n          ></i>\n        </div>\n        <H1 color=\"primary\">Choose Your Move</H1>\n      </FlexContainer>\n    );\n  }\n}\n\nPlayerVsCom.propTypes = {\n  setResult: PropTypes.func.isRequired,\n  result: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  result: state.result.result\n});\n\nexport default connect(\n  mapStateToProps,\n  { setResult }\n)(PlayerVsCom);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { H1 } from '../elements/Text';\nimport Button from '../elements/Button';\n\nimport Line from '../elements/Line';\nimport FlexContainer from '../elements/FlexContainer';\nimport { setResult } from '../actions/result';\nimport { ROCK, PAPER, SCISSORS } from '../constants';\nimport { connect } from 'react-redux';\n\nclass ComVsCom extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick.bind(this);\n    this.state = { computer1Move: 0, computer2Move: 0 };\n  }\n\n  handleClick = e => {\n    let elem1 = document.getElementById('computer1Move');\n    let elem2 = document.getElementById('computer2Move');\n    // Handle animation player move\n    if (elem1 !== null) {\n      elem1.classList.remove('bounce-in-bottom');\n      // This line is used to reset animation\n      void elem1.offsetWidth;\n      elem1.classList.add('bounce-in-bottom');\n    }\n    // Handle animation computer move\n    if (elem2 !== null) {\n      elem2.classList.remove('bounce-in-bottom');\n      // This line is used to reset animation\n      void elem2.offsetWidth;\n      elem2.classList.add('bounce-in-bottom');\n    }\n\n    let c1Move = this.getRandomArbitrary(1, 3);\n    let c2Move = this.getRandomArbitrary(1, 3);\n    this.setState({ computer1Move: c1Move, computer2Move: c2Move });\n    // dispatch result to store\n    this.props.setResult(c1Move, c2Move);\n  };\n\n  getRandomArbitrary(min, max) {\n    return Math.round(Math.random() * (max - min) + min);\n  }\n\n  render() {\n    let renderedCom1Move, renderedCom2Move;\n    switch (this.state.computer2Move) {\n      case ROCK:\n        renderedCom2Move = (\n          <i\n            id=\"computer2Move\"\n            className=\"fas fa-hand-rock  fa-6x bounce-in-bottom\"\n            style={{ color: '#F90787' }}\n          ></i>\n        );\n        break;\n      case PAPER:\n        renderedCom2Move = (\n          <i\n            id=\"computer2Move\"\n            className=\"fas fa-hand-paper  fa-6x bounce-in-bottom\"\n            style={{ color: '#F90787' }}\n          ></i>\n        );\n        break;\n      case SCISSORS:\n        renderedCom2Move = (\n          <i\n            id=\"computer2Move\"\n            className=\"fas fa-hand-peace  fa-6x bounce-in-bottom\"\n            style={{ color: '#F90787' }}\n          ></i>\n        );\n        break;\n      default:\n        break;\n    }\n\n    switch (this.state.computer1Move) {\n      case ROCK:\n        renderedCom1Move = (\n          <i\n            id=\"computer1Move\"\n            className=\"fas fa-hand-rock  fa-6x bounce-in-bottom\"\n            style={{ color: '#8B00F4' }}\n          ></i>\n        );\n        break;\n      case PAPER:\n        renderedCom1Move = (\n          <i\n            id=\"computer1Move\"\n            className=\"fas fa-hand-paper  fa-6x bounce-in-bottom\"\n            style={{ color: '#8B00F4' }}\n          ></i>\n        );\n        break;\n      case SCISSORS:\n        renderedCom1Move = (\n          <i\n            id=\"computer1Move\"\n            className=\"fas fa-hand-peace  fa-6x bounce-in-bottom\"\n            style={{ color: '#8B00F4' }}\n          ></i>\n        );\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <FlexContainer id=\"play-area\" direction=\"column\" align=\"center\">\n        <div>\n          <Button\n            onClick={this.handleClick}\n            disabled={this.props.result ? true : false}\n            style={\n              this.props.result\n                ? { pointerEvents: 'none' }\n                : { pointerEvents: 'auto' }\n            }\n          >\n            Click To Play\n          </Button>\n        </div>\n        <H1 color=\"primary\">Computer 2</H1>\n        <div style={{ flexDirection: 'row', transform: 'rotate(180deg)' }}>\n          <i\n            className=\"fas fa-hand-rock fa-6x\"\n            id=\"1\"\n            style={{ padding: '20px' }}\n          ></i>\n\n          <i\n            className=\"fas fa-hand-paper fa-6x\"\n            id=\"2\"\n            style={{ padding: '20px' }}\n          ></i>\n\n          <i\n            className=\"fas fa-hand-peace fa-6x\"\n            id=\"3\"\n            style={{ padding: '20px' }}\n          ></i>\n        </div>\n        <div\n          style={{\n            height: '200px',\n            transform: 'rotate(180deg)'\n          }}\n        >\n          {this.props.result !== null ? renderedCom2Move : <></>}\n        </div>\n\n        <div>\n          <Line bg=\"gradient\" hg=\"3\" pd=\"10px\" mg=\"50px\" />\n        </div>\n\n        <div\n          style={{\n            height: '200px'\n          }}\n        >\n          {this.props.result !== null ? renderedCom1Move : <></>}\n        </div>\n\n        <div style={{ flexDirection: 'row' }}>\n          <i\n            className=\"fas fa-hand-rock fa-6x\"\n            id=\"1\"\n            style={{ padding: '20px' }}\n          ></i>\n\n          <i\n            className=\"fas fa-hand-paper fa-6x\"\n            id=\"2\"\n            style={{ padding: '20px' }}\n          ></i>\n\n          <i\n            className=\"fas fa-hand-peace fa-6x\"\n            id=\"3\"\n            style={{ padding: '20px' }}\n          ></i>\n        </div>\n        <H1 color=\"primary\">Computer 1</H1>\n      </FlexContainer>\n    );\n  }\n}\n\nComVsCom.propTypes = {\n  setResult: PropTypes.func.isRequired,\n  result: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  result: state.result.result\n});\nexport default connect(\n  mapStateToProps,\n  { setResult }\n)(ComVsCom);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FlexContainer from '../elements/FlexContainer';\nimport { H1 } from '../elements/Text';\nimport Button from '../elements/Button';\nimport { connect } from 'react-redux';\nimport { setNewGame } from '../actions/new';\nimport { P1WIN, P2WIN, DRAW } from '../constants';\nimport { PLAYER_VS_COMPUTER, COMPUTER_VS_COMPUTER } from '../constants';\n\nconst Result = ({ result, playMode, setNewGame }) => {\n  let displayed_result = null;\n  function resetAnimation() {\n    let elem = document.getElementById('result');\n    if (elem !== null) {\n      elem.classList.remove('shake-horizontal');\n      // This line is used to reset animation\n      void elem.offsetWidth;\n      elem.classList.add('shake-horizontal');\n    }\n  }\n\n  resetAnimation();\n\n  if (playMode === PLAYER_VS_COMPUTER) {\n    if (result === P1WIN) {\n      displayed_result = (\n        <H1 id=\"result\" className=\"shake-horizontal\" color=\"pink\">\n          You Win!\n        </H1>\n      );\n    } else if (result === P2WIN) {\n      displayed_result = (\n        <H1 id=\"result\" className=\"shake-horizontal\" color=\"pink\">\n          You Lose!\n        </H1>\n      );\n    } else if (result === DRAW) {\n      displayed_result = (\n        <H1 id=\"result\" className=\"shake-horizontal\" color=\"pink\">\n          Draw!\n        </H1>\n      );\n    }\n  } else if (playMode === COMPUTER_VS_COMPUTER) {\n    if (result === P1WIN) {\n      displayed_result = (\n        <H1 id=\"result\" className=\"shake-horizontal\" color=\"pink\">\n          Computer 1 Wins!\n        </H1>\n      );\n    } else if (result === P2WIN) {\n      displayed_result = (\n        <H1 id=\"result\" className=\"shake-horizontal\" color=\"pink\">\n          Computer 2 Wins!\n        </H1>\n      );\n    } else if (result === DRAW) {\n      displayed_result = (\n        <H1 id=\"result\" className=\"shake-horizontal\" color=\"pink\">\n          Draw!\n        </H1>\n      );\n    }\n  }\n\n  return (\n    <FlexContainer direction=\"column\" align=\"center\">\n      <div>{displayed_result}</div>\n      {displayed_result !== null ? (\n        <div>\n          <Button onClick={setNewGame}>Play Again!</Button>\n        </div>\n      ) : (\n        <></>\n      )}\n    </FlexContainer>\n  );\n};\n\nResult.propTypes = {\n  result: PropTypes.number,\n  playMode: PropTypes.number.isRequired,\n  setNewGame: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  result: state.result.result,\n  playMode: state.mode.playMode\n});\n\nexport default connect(\n  mapStateToProps,\n  { setNewGame }\n)(Result);\n","import { SET_RESULT } from './types';\n// clear previous resultand chosen rock,paper,scissors\nexport const setNewGame = () => async dispatch => {\n  dispatch({\n    type: SET_RESULT,\n    payload: null\n  });\n};\n","import styled from 'styled-components';\nimport { device } from '../constants';\n\nconst MainContainer = styled.div`\n  display: grid;\n\n  @media ${device.tablet} {\n    grid-template-columns: auto;\n    grid-template-rows: auto auto auto auto auto;\n  }\n\n  @media ${device.laptop} {\n    grid-template-columns: 25% 50% 25%;\n  }\n\n  @media ${device.desktop} {\n    grid-template-columns: 25% 50% 25%;\n  }\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  margin: 15px;\n  background-color: white;\n`;\n\nexport default MainContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Options from './Options';\nimport PlayerVsCom from './PlayerVsCom';\nimport ComVsCom from './ComVsCom';\nimport Result from './Result';\nimport MainContainer from '../elements/MainContainer';\nimport { connect } from 'react-redux';\n\nimport { PLAYER_VS_COMPUTER, COMPUTER_VS_COMPUTER } from '../constants';\n\nconst MainScreen = ({ playMode }) => {\n  let playarea;\n  if (playMode === PLAYER_VS_COMPUTER) {\n    playarea = <PlayerVsCom />;\n  } else if (playMode === COMPUTER_VS_COMPUTER) {\n    playarea = <ComVsCom />;\n  } else {\n    // Default play mode is chosen as player and computer\n    playarea = <PlayerVsCom />;\n  }\n  return (\n    <MainContainer>\n      <Options></Options>\n\n      {playarea}\n\n      <Result></Result>\n    </MainContainer>\n  );\n};\n\nMainScreen.propTypes = { playMode: PropTypes.number.isRequired };\n\nconst mapStateToProps = state => ({\n  playMode: state.mode.playMode\n});\n\nexport default connect(mapStateToProps)(MainScreen);\n","const theme = {\n  primary: '#060059',\n  secondary: 'green',\n  alert: 'yellow',\n  gradient: 'linear-gradient(90deg, #F90787 0%, #8B00F4 100%)',\n  font: 'Orbitron',\n  orange: 'orange',\n  purple: '#8B00F4',\n  pink: '#F90787',\n  gray: 'gray'\n};\n\nexport default theme;\n","import React from 'react';\nimport MainScreen from './components/MainScreen';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './elements/theme';\nimport './App.css';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <MainScreen />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_PLAY_MODE } from '../actions/types';\nimport { PLAYER_VS_COMPUTER } from '../constants';\n\nconst initialState = {\n  playMode: PLAYER_VS_COMPUTER\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_PLAY_MODE:\n      return { ...state, playMode: payload };\n    default:\n      return state;\n  }\n}\n","import { SET_RESULT } from '../actions/types';\n\nconst initialState = {\n  result: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_RESULT:\n      return { ...state, result: payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport mode from './mode';\nimport result from './result';\n\nexport default combineReducers({ mode, result });\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n//import * as cons from './constants';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// Import redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}